package com.company;
import com.company.Calculator;

COMPILER Calculator

Calculator calculator;


/*---------------------------------------------------*/
CHARACTERS
   digit = '0' .. '9'.
   cr  = '\r'.
   lf  = '\n'.
   ht  = '\t'.
   plus='+'.
   minus='-'.
   multiple='*'.
   division='/'.
   invalid= ANY-digit-plus-minus-multiple-division.

TOKENS
    ident=(([plus]|[minus])digit {digit}|([plus]|[minus])digit {digit} '.' {digit}).
    pre=plus |minus.
    act= multiple |division.
    ans="ans".
    ANS="ANS".

COMMENTS FROM "/*" TO "*/"
COMMENTS FROM "//" TO lf


IGNORE cr + lf + ht

PRODUCTIONS
Calculator  (.double buff=0.0;.)
 =
 ["("]
 Expression<out double x> (.buff+=x;.)
 {
 ")"
  Operation<out String s>
  "("
 Expression<out double x1>  (.if(s==null) buff=buff*x1;
                         else if(s.equals("+")) buff+=+x1;
                                        else if(s.equals("-")) buff-=x1;
                                       else if(s.equals("/")) buff=buff/x1;
                                       else if(s.equals("*")) buff=buff*x1;
                                       else buff=buff*x1;
                                            .)
 ")"
 }                  (.calculator.showResult(buff);.)
 .

ParenthesisExpression
="("
 Expression<out double x> (.buff+=x;.)
 ")"
.

Expression<out double ret> (.double n1; double n2; String s=null;ret=0.0;.)
=
Ident<out n1> (.ret=n1;.)
{
 Operation<out s>
 Ident<out n2> (. if(s==null) ret=n1+n2;
                   else if(s.equals("+")) ret=ret+n2;
                else if(s.equals("-")) ret=ret-n2;
               else if(s.equals("/")) ret=ret/n2;
               else if(s.equals("*")) ret=ret*n2;
                else ret=ret+n2;.)
                }
                |
                ANS (.ret=calculator.getAns();.)
                .

 Ident<out double n>    (.n=0.0;.)
 =
 ident (. n = Double.parseDouble(t.val);.)
 | ans (. n = calculator.getAns();.)
  .

 Operation<out String s>
 = [pre|act]  (.s=t.val;.).

END Calculator.
